[{"path":[]},{"path":"https://poissonconsulting.github.io/fwapgr/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement .github/. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Poisson Consulting Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/articles/collections.html","id":"collections","dir":"Articles","previous_headings":"","what":"Collections","title":"The Collections and their Properies","text":"","code":"collection_id <- fwa_collections()$collection_id collection_id #>  [1] \"hydrosheds.hybas_lev12_v1c\"                      #>  [2] \"usgs.wbdhu12\"                                    #>  [3] \"whse_basemapping.fwa_approx_borders\"             #>  [4] \"whse_basemapping.fwa_assessment_watersheds_poly\" #>  [5] \"whse_basemapping.fwa_basins_poly\"                #>  [6] \"whse_basemapping.fwa_bays_and_channels_poly\"     #>  [7] \"whse_basemapping.fwa_bcboundary\"                 #>  [8] \"whse_basemapping.fwa_coastlines_sp\"              #>  [9] \"whse_basemapping.fwa_glaciers_poly\"              #> [10] \"whse_basemapping.fwa_islands_poly\"               #> [11] \"whse_basemapping.fwa_lakes_poly\"                 #> [12] \"whse_basemapping.fwa_linear_boundaries_sp\"       #> [13] \"whse_basemapping.fwa_manmade_waterbodies_poly\"   #> [14] \"whse_basemapping.fwa_named_streams\"              #> [15] \"whse_basemapping.fwa_named_watersheds_poly\"      #> [16] \"whse_basemapping.fwa_obstructions_sp\"            #> [17] \"whse_basemapping.fwa_rivers_poly\"                #> [18] \"whse_basemapping.fwa_stream_networks_sp\"         #> [19] \"whse_basemapping.fwa_streams_vw\"                 #> [20] \"whse_basemapping.fwa_watershed_groups_poly\"      #> [21] \"whse_basemapping.fwa_watersheds_poly\"            #> [22] \"whse_basemapping.fwa_wetlands_poly\""},{"path":"https://poissonconsulting.github.io/fwapgr/articles/collections.html","id":"collection-properties","dir":"Articles","previous_headings":"","what":"Collection Properties","title":"The Collections and their Properies","text":"","code":"names(collection_id) <- collection_id lapply(collection_id, fwa_collection_properties) #> $hydrosheds.hybas_lev12_v1c #> # A tibble: 2 × 3 #>   name      type   description #>   <chr>     <chr>  <chr>       #> 1 hybas_id  number \"\"          #> 2 next_down number \"\"          #>  #> $usgs.wbdhu12 #> # A tibble: 20 × 3 #>    name                     type   description #>    <chr>                    <chr>  <chr>       #>  1 tnmid                    string \"\"          #>  2 metasourceid             string \"\"          #>  3 sourcedatadesc           string \"\"          #>  4 sourceoriginator         string \"\"          #>  5 sourcefeatureid          string \"\"          #>  6 loaddate                 string \"\"          #>  7 referencegnis_ids        string \"\"          #>  8 areaacres                number \"\"          #>  9 areasqkm                 number \"\"          #> 10 states                   string \"\"          #> 11 huc12                    string \"\"          #> 12 name                     string \"\"          #> 13 hutype                   string \"\"          #> 14 humod                    string \"\"          #> 15 tohuc                    string \"\"          #> 16 noncontributingareaacres number \"\"          #> 17 noncontributingareasqkm  number \"\"          #> 18 globalid                 string \"\"          #> 19 shape_length             number \"\"          #> 20 shape_area               number \"\"          #>  #> $whse_basemapping.fwa_approx_borders #> # A tibble: 2 × 3 #>   name             type   description                                            #>   <chr>            <chr>  <chr>                                                  #> 1 approx_border_id number unique identifer                                       #> 2 border           string a code identifying the border (usa49, ytnwt_60, ab_12… #>  #> $whse_basemapping.fwa_assessment_watersheds_poly #> # A tibble: 24 × 3 #>    name                 type   description #>    <chr>                <chr>  <chr>       #>  1 watershed_feature_id number \"\"          #>  2 watershed_group_id   number \"\"          #>  3 watershed_type       string \"\"          #>  4 gnis_id_1            number \"\"          #>  5 gnis_name_1          string \"\"          #>  6 gnis_id_2            number \"\"          #>  7 gnis_name_2          string \"\"          #>  8 gnis_id_3            number \"\"          #>  9 gnis_name_3          string \"\"          #> 10 waterbody_id         number \"\"          #> # ℹ 14 more rows #>  #> $whse_basemapping.fwa_basins_poly #> # A tibble: 4 × 3 #>   name            type   description                                             #>   <chr>           <chr>  <chr>                                                   #> 1 basin_id        number Basin unique identifier                                 #> 2 basin_name      string Basin name, eg Thompson River                           #> 3 wscode_ltree    string The watershed code associated with the stream at the o… #> 4 localcode_ltree string The local watershed code associated with the stream at… #>  #> $whse_basemapping.fwa_bays_and_channels_poly #> # A tibble: 6 × 3 #>   name               type   description #>   <chr>              <chr>  <chr>       #> 1 bay_and_channel_id number \"\"          #> 2 bay_channel_type   string \"\"          #> 3 gnis_id            number \"\"          #> 4 gnis_name          string \"\"          #> 5 area_ha            number \"\"          #> 6 feature_code       string \"\"          #>  #> $whse_basemapping.fwa_bcboundary #> # A tibble: 1 × 3 #>   name          type   description         #>   <chr>         <chr>  <chr>               #> 1 bcboundary_id number Boundary polygon id #>  #> $whse_basemapping.fwa_coastlines_sp #> # A tibble: 14 × 3 #>    name                     type   description #>    <chr>                    <chr>  <chr>       #>  1 linear_feature_id        number \"\"          #>  2 watershed_group_id       number \"\"          #>  3 edge_type                number \"\"          #>  4 blue_line_key            number \"\"          #>  5 watershed_key            number \"\"          #>  6 fwa_watershed_code       string \"\"          #>  7 local_watershed_code     string \"\"          #>  8 watershed_group_code     string \"\"          #>  9 downstream_route_measure number \"\"          #> 10 length_metre             number \"\"          #> 11 feature_source           string \"\"          #> 12 feature_code             string \"\"          #> 13 wscode_ltree             string \"\"          #> 14 localcode_ltree          string \"\"          #>  #> $whse_basemapping.fwa_glaciers_poly #> # A tibble: 24 × 3 #>    name               type   description #>    <chr>              <chr>  <chr>       #>  1 waterbody_poly_id  number \"\"          #>  2 watershed_group_id number \"\"          #>  3 waterbody_type     string \"\"          #>  4 waterbody_key      number \"\"          #>  5 area_ha            number \"\"          #>  6 gnis_id_1          number \"\"          #>  7 gnis_name_1        string \"\"          #>  8 gnis_id_2          number \"\"          #>  9 gnis_name_2        string \"\"          #> 10 gnis_id_3          number \"\"          #> # ℹ 14 more rows #>  #> $whse_basemapping.fwa_islands_poly #> # A tibble: 14 × 3 #>    name                 type   description #>    <chr>                <chr>  <chr>       #>  1 island_id            number \"\"          #>  2 island_type          string \"\"          #>  3 gnis_id_1            number \"\"          #>  4 gnis_name_1          string \"\"          #>  5 gnis_id_2            number \"\"          #>  6 gnis_name_2          string \"\"          #>  7 gnis_id_3            number \"\"          #>  8 gnis_name_3          string \"\"          #>  9 fwa_watershed_code   string \"\"          #> 10 local_watershed_code string \"\"          #> 11 area_ha              number \"\"          #> 12 feature_code         string \"\"          #> 13 wscode_ltree         string \"\"          #> 14 localcode_ltree      string \"\"          #>  #> $whse_basemapping.fwa_lakes_poly #> # A tibble: 24 × 3 #>    name               type   description #>    <chr>              <chr>  <chr>       #>  1 waterbody_poly_id  number \"\"          #>  2 watershed_group_id number \"\"          #>  3 waterbody_type     string \"\"          #>  4 waterbody_key      number \"\"          #>  5 area_ha            number \"\"          #>  6 gnis_id_1          number \"\"          #>  7 gnis_name_1        string \"\"          #>  8 gnis_id_2          number \"\"          #>  9 gnis_name_2        string \"\"          #> 10 gnis_id_3          number \"\"          #> # ℹ 14 more rows #>  #> $whse_basemapping.fwa_linear_boundaries_sp #> # A tibble: 15 × 3 #>    name                     type   description #>    <chr>                    <chr>  <chr>       #>  1 linear_feature_id        number \"\"          #>  2 watershed_group_id       number \"\"          #>  3 edge_type                number \"\"          #>  4 waterbody_key            number \"\"          #>  5 blue_line_key            number \"\"          #>  6 watershed_key            number \"\"          #>  7 fwa_watershed_code       string \"\"          #>  8 local_watershed_code     string \"\"          #>  9 watershed_group_code     string \"\"          #> 10 downstream_route_measure number \"\"          #> 11 length_metre             number \"\"          #> 12 feature_source           string \"\"          #> 13 feature_code             string \"\"          #> 14 wscode_ltree             string \"\"          #> 15 localcode_ltree          string \"\"          #>  #> $whse_basemapping.fwa_manmade_waterbodies_poly #> # A tibble: 24 × 3 #>    name               type   description #>    <chr>              <chr>  <chr>       #>  1 waterbody_poly_id  number \"\"          #>  2 watershed_group_id number \"\"          #>  3 waterbody_type     string \"\"          #>  4 waterbody_key      number \"\"          #>  5 area_ha            number \"\"          #>  6 gnis_id_1          number \"\"          #>  7 gnis_name_1        string \"\"          #>  8 gnis_id_2          number \"\"          #>  9 gnis_name_2        string \"\"          #> 10 gnis_id_3          number \"\"          #> # ℹ 14 more rows #>  #> $whse_basemapping.fwa_named_streams #> # A tibble: 5 × 3 #>   name                 type   description                                        #>   <chr>                <chr>  <chr>                                              #> 1 named_streams_id     number Named stream unique identifier                     #> 2 gnis_name            string The BCGNIS (BC Geographical Names Information Sys… #> 3 blue_line_key        number The blue line key of the named stream, see FWA do… #> 4 stream_order         number The maximum stream order associated with the stre… #> 5 watershed_group_code string The watershed group code associated with the name… #>  #> $whse_basemapping.fwa_named_watersheds_poly #> # A tibble: 11 × 3 #>    name               type   description #>    <chr>              <chr>  <chr>       #>  1 named_watershed_id number \"\"          #>  2 gnis_id            number \"\"          #>  3 gnis_name          string \"\"          #>  4 blue_line_key      number \"\"          #>  5 watershed_key      number \"\"          #>  6 fwa_watershed_code string \"\"          #>  7 stream_order       number \"\"          #>  8 stream_magnitude   number \"\"          #>  9 area_ha            number \"\"          #> 10 feature_code       string \"\"          #> 11 wscode_ltree       string \"\"          #>  #> $whse_basemapping.fwa_obstructions_sp #> # A tibble: 16 × 3 #>    name                 type   description #>    <chr>                <chr>  <chr>       #>  1 obstruction_id       number \"\"          #>  2 watershed_group_id   number \"\"          #>  3 linear_feature_id    number \"\"          #>  4 gnis_id              number \"\"          #>  5 gnis_name            string \"\"          #>  6 obstruction_type     string \"\"          #>  7 blue_line_key        number \"\"          #>  8 watershed_key        number \"\"          #>  9 fwa_watershed_code   string \"\"          #> 10 local_watershed_code string \"\"          #> 11 watershed_group_code string \"\"          #> 12 route_measure        number \"\"          #> 13 feature_source       string \"\"          #> 14 feature_code         string \"\"          #> 15 wscode_ltree         string \"\"          #> 16 localcode_ltree      string \"\"          #>  #> $whse_basemapping.fwa_rivers_poly #> # A tibble: 24 × 3 #>    name               type   description #>    <chr>              <chr>  <chr>       #>  1 waterbody_poly_id  number \"\"          #>  2 watershed_group_id number \"\"          #>  3 waterbody_type     string \"\"          #>  4 waterbody_key      number \"\"          #>  5 area_ha            number \"\"          #>  6 gnis_id_1          number \"\"          #>  7 gnis_name_1        string \"\"          #>  8 gnis_id_2          number \"\"          #>  9 gnis_name_2        string \"\"          #> 10 gnis_id_3          number \"\"          #> # ℹ 14 more rows #>  #> $whse_basemapping.fwa_stream_networks_sp #> # A tibble: 26 × 3 #>    name                     type   description #>    <chr>                    <chr>  <chr>       #>  1 linear_feature_id        number \"\"          #>  2 watershed_group_id       number \"\"          #>  3 edge_type                number \"\"          #>  4 blue_line_key            number \"\"          #>  5 watershed_key            number \"\"          #>  6 fwa_watershed_code       string \"\"          #>  7 local_watershed_code     string \"\"          #>  8 watershed_group_code     string \"\"          #>  9 downstream_route_measure number \"\"          #> 10 length_metre             number \"\"          #> # ℹ 16 more rows #>  #> $whse_basemapping.fwa_streams_vw #> # A tibble: 24 × 3 #>    name                     type   description                                   #>    <chr>                    <chr>  <chr>                                         #>  1 linear_feature_id        number See FWA documentation                         #>  2 edge_type                number See FWA documentation                         #>  3 blue_line_key            number See FWA documentation                         #>  4 watershed_key            number See FWA documentation                         #>  5 wscode                   string FWA watershed code as postgres ltree type, w… #>  6 localcode                string FWA local watershed code as postgres ltree t… #>  7 watershed_group_code     string See FWA documentation                         #>  8 downstream_route_measure number See FWA documentation                         #>  9 upstream_route_measure   number See FWA documentation                         #> 10 length_metre             number See FWA documentation                         #> # ℹ 14 more rows #>  #> $whse_basemapping.fwa_watershed_groups_poly #> # A tibble: 10 × 3 #>    name                 type   description #>    <chr>                <chr>  <chr>       #>  1 watershed_group_id   number \"\"          #>  2 watershed_group_code string \"\"          #>  3 watershed_group_name string \"\"          #>  4 area_ha              number \"\"          #>  5 feature_code         string \"\"          #>  6 fwa_watershed_code   string \"\"          #>  7 local_watershed_code string \"\"          #>  8 wscode_ltree         string \"\"          #>  9 localcode_ltree      string \"\"          #> 10 basin_id             number \"\"          #>  #> $whse_basemapping.fwa_watersheds_poly #> # A tibble: 36 × 3 #>    name                 type   description #>    <chr>                <chr>  <chr>       #>  1 watershed_feature_id number \"\"          #>  2 watershed_group_id   number \"\"          #>  3 watershed_type       string \"\"          #>  4 gnis_id_1            number \"\"          #>  5 gnis_name_1          string \"\"          #>  6 gnis_id_2            number \"\"          #>  7 gnis_name_2          string \"\"          #>  8 gnis_id_3            number \"\"          #>  9 gnis_name_3          string \"\"          #> 10 waterbody_id         number \"\"          #> # ℹ 26 more rows #>  #> $whse_basemapping.fwa_wetlands_poly #> # A tibble: 24 × 3 #>    name               type   description #>    <chr>              <chr>  <chr>       #>  1 waterbody_poly_id  number \"\"          #>  2 watershed_group_id number \"\"          #>  3 waterbody_type     string \"\"          #>  4 waterbody_key      number \"\"          #>  5 area_ha            number \"\"          #>  6 gnis_id_1          number \"\"          #>  7 gnis_name_1        string \"\"          #>  8 gnis_id_2          number \"\"          #>  9 gnis_name_2        string \"\"          #> 10 gnis_id_3          number \"\"          #> # ℹ 14 more rows"},{"path":"https://poissonconsulting.github.io/fwapgr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sebastian Dalgarno. Author, maintainer. Joe Thorley. Author. . Copyright holder, funder. Nadine Hussein. Contributor.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dalgarno S, Thorley J (2025). fwapgr: Client BC Freshwater Atlas fwapg API. R package version 0.1.0.9015, https://github.com/poissonconsulting/fwapgr.","code":"@Manual{,   title = {fwapgr: Client for BC Freshwater Atlas fwapg API},   author = {Sebastian Dalgarno and Joe Thorley},   year = {2025},   note = {R package version 0.1.0.9015},   url = {https://github.com/poissonconsulting/fwapgr}, }"},{"path":"https://poissonconsulting.github.io/fwapgr/index.html","id":"fwapgr-","dir":"","previous_headings":"","what":"Client for BC Freshwater Atlas fwapg API","title":"Client for BC Freshwater Atlas fwapg API","text":"fwapgr R package uses fwapg API query Freshwater Atlas (FWA) British Columbia (BC). functions arguments fwapgr match available API. looking higher-level R package query FWA BC see fwatlasbc wraps fwapgr.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Client for BC Freshwater Atlas fwapg API","text":"install lastest version GitHub","code":"# install.packages(\"devtools\") devtools::install_github(\"poissonconsulting/pgfeatureserv\") devtools::install_github(\"poissonconsulting/fwapgr\")"},{"path":"https://poissonconsulting.github.io/fwapgr/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Client for BC Freshwater Atlas fwapg API","text":"fwapgr allows perform three types operation.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/index.html","id":"get-information-on-collections","dir":"","previous_headings":"Introduction","what":"Get Information on Collections","title":"Client for BC Freshwater Atlas fwapg API","text":"Get information collections collection’s properties: fwa_collections() fwa_collection_properties()","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/index.html","id":"query-a-collection","dir":"","previous_headings":"Introduction","what":"Query a Collection","title":"Client for BC Freshwater Atlas fwapg API","text":"Query features collection: fwa_query_collection()","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/index.html","id":"execute-spatial-functions","dir":"","previous_headings":"Introduction","what":"Execute Spatial Functions","title":"Client for BC Freshwater Atlas fwapg API","text":"Execute spatial functions: fwa_index_point() fwa_locate_along() fwa_locate_along_interval() fwa_watershed_at_measure() fwa_watershed_hex() fwa_watershed_stream() hydroshed()","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/index.html","id":"demonstration","dir":"","previous_headings":"","what":"Demonstration","title":"Client for BC Freshwater Atlas fwapg API","text":"Get Sangan River whse_basemapping.fwa_stream_networks_sp collection: Get simplified Yakoun River watershed starting 10km upstream:","code":"coll <- \"whse_basemapping.fwa_stream_networks_sp\" river <- fwapgr::fwa_query_collection(coll, filter = list(gnis_name = \"Sangan River\")) river #> Simple feature collection with 21 features and 26 fields #> Geometry type: LINESTRING #> Dimension:     XYZ #> Bounding box:  xmin: -131.9972 ymin: 53.94994 xmax: -131.9168 ymax: 54.0332 #> z_range:       zmin: 1 zmax: 67 #> Geodetic CRS:  WGS 84 #> # A data frame: 21 × 27 #>    blue_line_key blue_line_key_50k downstream_route_mea…¹ edge_type feature_code #>  *         <int>             <int>                  <dbl>     <dbl> <chr>        #>  1     360879896                11                  6808.      1000 GA24850000   #>  2     360879896                11                 12161.      1000 GA24850000   #>  3     360879896                11                  9544.      1000 GA24850000   #>  4     360879896                11                 10909.      1000 GA24850000   #>  5     360879896                11                  1266.      1000 GA24850000   #>  6     360879896                11                 13068.      1000 GA24850000   #>  7     360879896                11                  8744.      1000 GA24850000   #>  8     360879896                11                 13776.      1000 GA24850000   #>  9     360879896                11                  7849.      1000 GA24850000   #> 10     360879896                11                  5029.      1000 GA24850000   #> # ℹ 11 more rows #> # ℹ abbreviated name: ¹​downstream_route_measure #> # ℹ 22 more variables: feature_source <chr>, fwa_watershed_code <chr>, #> #   gnis_id <int>, gnis_name <chr>, gradient <dbl>, left_right_tributary <chr>, #> #   length_metre <dbl>, linear_feature_id <int>, local_watershed_code <chr>, #> #   localcode_ltree <chr>, stream_magnitude <dbl>, stream_order <dbl>, #> #   upstream_route_measure <dbl>, waterbody_key <chr>, … blk <- river$blue_line_key[1] wshed <- fwapgr::fwa_watershed_at_measure(   blk,   downstream_route_measure = 10000,   transform = c(\"ST_Simplify\", 2000) ) ggplot2::ggplot() +   ggplot2::geom_sf(data = wshed, lwd = 0.15, fill = \"steelblue\", alpha = 0.5) +   ggplot2::geom_sf(data = river, lwd = 0.15)"},{"path":"https://poissonconsulting.github.io/fwapgr/index.html","id":"creditation","dir":"","previous_headings":"","what":"Creditation","title":"Client for BC Freshwater Atlas fwapg API","text":"fwapgr relies fwapg API created, maintained hosted Simon Norris Hillcrest Geographics.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/index.html","id":"contribution","dir":"","previous_headings":"","what":"Contribution","title":"Client for BC Freshwater Atlas fwapg API","text":"Please report issues. Pull requests always welcome.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/index.html","id":"code-of-conduct","dir":"","previous_headings":"Contribution","what":"Code of Conduct","title":"Client for BC Freshwater Atlas fwapg API","text":"Please note fwapgr released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_collection_properties.html","id":null,"dir":"Reference","previous_headings":"","what":"Freshwater Atlas Collection's Properties — fwa_collection_properties","title":"Freshwater Atlas Collection's Properties — fwa_collection_properties","text":"Get information collection's column names.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_collection_properties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Freshwater Atlas Collection's Properties — fwa_collection_properties","text":"","code":"fwa_collection_properties(   collection_id,   nocache = getOption(\"fwa.nocache\", FALSE) )  fwa_meta_properties(collection_id, nocache = getOption(\"fwa.nocache\", FALSE))"},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_collection_properties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Freshwater Atlas Collection's Properties — fwa_collection_properties","text":"collection_id character string collection id. nocache flag specifying whether cache results.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_collection_properties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Freshwater Atlas Collection's Properties — fwa_collection_properties","text":"tibble.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_collection_properties.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Freshwater Atlas Collection's Properties — fwa_collection_properties","text":"fwa_meta_properties(): Freshwater Atlas Collection's Properties soft-deprecated","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_collection_properties.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Freshwater Atlas Collection's Properties — fwa_collection_properties","text":"","code":"fwa_collection_properties(\"whse_basemapping.fwa_stream_networks_sp\") #> # A tibble: 26 × 3 #>    name                     type   description #>    <chr>                    <chr>  <chr>       #>  1 linear_feature_id        number \"\"          #>  2 watershed_group_id       number \"\"          #>  3 edge_type                number \"\"          #>  4 blue_line_key            number \"\"          #>  5 watershed_key            number \"\"          #>  6 fwa_watershed_code       string \"\"          #>  7 local_watershed_code     string \"\"          #>  8 watershed_group_code     string \"\"          #>  9 downstream_route_measure number \"\"          #> 10 length_metre             number \"\"          #> # ℹ 16 more rows"},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_collections.html","id":null,"dir":"Reference","previous_headings":"","what":"Freshwater Atlas Collections — fwa_collections","title":"Freshwater Atlas Collections — fwa_collections","text":"Get information collections.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_collections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Freshwater Atlas Collections — fwa_collections","text":"","code":"fwa_collections(nocache = getOption(\"fwa.nocache\", FALSE))  fwa_meta_collections(nocache = getOption(\"fwa.nocache\", FALSE))"},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_collections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Freshwater Atlas Collections — fwa_collections","text":"nocache flag specifying whether cache results.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_collections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Freshwater Atlas Collections — fwa_collections","text":"tibble.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_collections.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Freshwater Atlas Collections — fwa_collections","text":"fwa_meta_collections(): Freshwater Atlas Collections soft-deprecated","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_collections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Freshwater Atlas Collections — fwa_collections","text":"","code":"fwa_collections() #> # A tibble: 22 × 4 #>    collection_id                            description extent$spatial$crs links #>    <chr>                                    <chr>       <chr>              <lis> #>  1 hydrosheds.hybas_lev12_v1c               HydroBasin… http://www.opengi… <df>  #>  2 usgs.wbdhu12                             USGS Natio… http://www.opengi… <df>  #>  3 whse_basemapping.fwa_approx_borders      lines of l… http://www.opengi… <df>  #>  4 whse_basemapping.fwa_assessment_watersh… Data for t… http://www.opengi… <df>  #>  5 whse_basemapping.fwa_basins_poly         Large BC w… http://www.opengi… <df>  #>  6 whse_basemapping.fwa_bays_and_channels_… Data for t… http://www.opengi… <df>  #>  7 whse_basemapping.fwa_bcboundary          Boundary o… http://www.opengi… <df>  #>  8 whse_basemapping.fwa_coastlines_sp       Data for t… http://www.opengi… <df>  #>  9 whse_basemapping.fwa_glaciers_poly       Data for t… http://www.opengi… <df>  #> 10 whse_basemapping.fwa_islands_poly        Data for t… http://www.opengi… <df>  #> # ℹ 12 more rows #> # ℹ 1 more variable: extent$spatial$bbox <list>"},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_index_point.html","id":null,"dir":"Reference","previous_headings":"","what":"Freshwater Atlas Index Point — fwa_index_point","title":"Freshwater Atlas Index Point — fwa_index_point","text":"Gets nearest point stream crow flies coordinates (within tolerance).","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_index_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Freshwater Atlas Index Point — fwa_index_point","text":"","code":"fwa_index_point(   x,   y,   srid = 4326,   tolerance = 5000,   limit = 1,   bbox = NULL,   properties = NULL,   transform = NULL,   epsg = 4326,   nocache = getOption(\"fwa.nocache\", FALSE) )"},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_index_point.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Freshwater Atlas Index Point — fwa_index_point","text":"x number x coordinate. y number y coordinate. srid positive whole number epsg coordinates. tolerance number tolerance m. limit positive whole number indicating maximum number features return. bbox vector four numbers indicating bounding box limit output features , e.g. c(minLon, minLat, maxLon, maxLat). properties vector strings column names include. NULL (default), columns retained. transform character vector name valid transform function followed parameter values (e.g. c(\"ST_Simplify\", 100)) epsg positive whole number epsg transform features . nocache flag specifying whether cache results.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_index_point.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Freshwater Atlas Index Point — fwa_index_point","text":"sf object.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_index_point.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Freshwater Atlas Index Point — fwa_index_point","text":"also return second nearest point stream crow flies (within tolerance) set limit = 2.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_index_point.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Freshwater Atlas Index Point — fwa_index_point","text":"","code":"fwa_index_point(x = -132.26, y = 53.36) #> Simple feature collection with 1 feature and 8 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -132.2547 ymin: 53.35672 xmax: -132.2547 ymax: 53.35672 #> Geodetic CRS:  WGS 84 #> # A data frame: 1 × 9 #>   bc_ind blue_line_key distance_to_stream downstream_route_measure gnis_name #> * <lgl>          <int>              <dbl>                    <dbl> <chr>     #> 1 TRUE       360824839               508.                    1118. NA        #> # ℹ 4 more variables: linear_feature_id <int>, localcode_ltree <chr>, #> #   wscode_ltree <chr>, geometry <POINT [°]>"},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_locate_along.html","id":null,"dir":"Reference","previous_headings":"","what":"Freshwater Atlas Locate Along — fwa_locate_along","title":"Freshwater Atlas Locate Along — fwa_locate_along","text":"Gets point stream corresponding river metre (downstream route measure).","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_locate_along.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Freshwater Atlas Locate Along — fwa_locate_along","text":"","code":"fwa_locate_along(   blue_line_key,   downstream_route_measure = 0,   bbox = NULL,   properties = NULL,   transform = NULL,   epsg = 4326,   nocache = getOption(\"fwa.nocache\", FALSE) )"},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_locate_along.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Freshwater Atlas Locate Along — fwa_locate_along","text":"blue_line_key positive whole number stream blue line key. downstream_route_measure positive number river metre. bbox vector four numbers indicating bounding box limit output features , e.g. c(minLon, minLat, maxLon, maxLat). properties vector strings column names include. NULL (default), columns retained. transform character vector name valid transform function followed parameter values (e.g. c(\"ST_Simplify\", 100)) epsg positive whole number epsg transform features . nocache flag specifying whether cache results.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_locate_along.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Freshwater Atlas Locate Along — fwa_locate_along","text":"sf object.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_locate_along.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Freshwater Atlas Locate Along — fwa_locate_along","text":"","code":"fwa_locate_along(356308001, downstream_route_measure = 10000) #> Simple feature collection with 1 feature and 0 fields #> Geometry type: POINT #> Dimension:     XYZ #> Bounding box:  xmin: -121.9504 ymin: 49.15144 xmax: -121.9504 ymax: 49.15144 #> z_range:       zmin: 10.5 zmax: 10.5 #> Geodetic CRS:  WGS 84 #> # A data frame: 1 × 1 #>                      geometry #> *                 <POINT [°]> #> 1 Z (-121.9504 49.15144 10.5)"},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_locate_along_interval.html","id":null,"dir":"Reference","previous_headings":"","what":"Freshwater Atlas Locate Along Interval — fwa_locate_along_interval","title":"Freshwater Atlas Locate Along Interval — fwa_locate_along_interval","text":"Gets regularly spaced set points two river metres.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_locate_along_interval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Freshwater Atlas Locate Along Interval — fwa_locate_along_interval","text":"","code":"fwa_locate_along_interval(   blue_line_key,   interval_length = 100,   start_measure = 0,   end_measure = NULL,   bbox = NULL,   properties = NULL,   transform = NULL,   epsg = 4326,   nocache = getOption(\"fwa.nocache\", FALSE) )"},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_locate_along_interval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Freshwater Atlas Locate Along Interval — fwa_locate_along_interval","text":"blue_line_key positive whole number stream blue line key. interval_length integer interval distance meters. start_measure integer distance meters upstream river mouth start . end_measure integer distance meters upstream river mouth end . bbox vector four numbers indicating bounding box limit output features , e.g. c(minLon, minLat, maxLon, maxLat). properties vector strings column names include. NULL (default), columns retained. transform character vector name valid transform function followed parameter values (e.g. c(\"ST_Simplify\", 100)) epsg positive whole number epsg transform features . nocache flag specifying whether cache results.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_locate_along_interval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Freshwater Atlas Locate Along Interval — fwa_locate_along_interval","text":"sf object.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_locate_along_interval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Freshwater Atlas Locate Along Interval — fwa_locate_along_interval","text":"","code":"fwa_locate_along_interval(356308001, interval_length = 10, start_measure = 0) #> Simple feature collection with 1924 features and 2 fields #> Geometry type: POINT #> Dimension:     XYZ #> Bounding box:  xmin: -122.0155 ymin: 49.11263 xmax: -121.8697 ymax: 49.16804 #> z_range:       zmin: 7.5 zmax: 214.8791 #> Geodetic CRS:  WGS 84 #> # A data frame: 1,924 × 3 #>    downstream_route_measure index                        geometry #>  *                    <int> <int>                     <POINT [°]> #>  1                        0     0    Z (-122.0155 49.16804 9.626) #>  2                       10     1 Z (-122.0154 49.16795 9.643175) #>  3                       20     2 Z (-122.0154 49.16787 9.660349) #>  4                       30     3 Z (-122.0153 49.16778 9.677524) #>  5                       40     4  Z (-122.0153 49.1677 9.694698) #>  6                       50     5 Z (-122.0152 49.16762 9.711873) #>  7                       60     6 Z (-122.0152 49.16753 9.729048) #>  8                       70     7 Z (-122.0151 49.16745 9.746222) #>  9                       80     8 Z (-122.0151 49.16736 9.763397) #> 10                       90     9  Z (-122.015 49.16728 9.780571) #> # ℹ 1,914 more rows"},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_query_collection.html","id":null,"dir":"Reference","previous_headings":"","what":"Query Freshwater Atlas Collection — fwa_collection","title":"Query Freshwater Atlas Collection — fwa_collection","text":"Query collection freshwater atlas.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_query_collection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query Freshwater Atlas Collection — fwa_collection","text":"","code":"fwa_collection(   collection_id,   filter = NULL,   limit = 10000,   bbox = NULL,   properties = NULL,   transform = NULL,   epsg = 4326,   nocache = getOption(\"fwa.nocache\", FALSE) )  fwa_query_collection(   collection_id,   filter = NULL,   limit = 10000,   offset = 0,   bbox = NULL,   properties = NULL,   transform = NULL,   sortby = NULL,   groupby = NULL,   epsg = 4326,   nocache = getOption(\"fwa.nocache\", FALSE) )"},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_query_collection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query Freshwater Atlas Collection — fwa_collection","text":"collection_id character string collection id. filter named vector list filter(s) apply, list names correspond column names list values correspond desired value, e.g. list(gnis_name = \"Sangan River\"). limit positive whole number indicating maximum number features return. bbox vector four numbers indicating bounding box limit output features , e.g. c(minLon, minLat, maxLon, maxLat). properties vector strings column names include. NULL (default), columns retained. transform character vector name valid transform function followed parameter values (e.g. c(\"ST_Simplify\", 100)) epsg positive whole number epsg transform features . nocache flag specifying whether cache results. offset positive whole number indicating offset start returned results. sortby string sorts response items property. Default ascending property name can prepended '-' indicate descending. groupby string property name (.e., column name) group response features . typically used aggregate transform function.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_query_collection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query Freshwater Atlas Collection — fwa_collection","text":"sf object.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_query_collection.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Query Freshwater Atlas Collection — fwa_collection","text":"fwa_collection(): Query Freshwater Atlas Collection soft-deprecated","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_query_collection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query Freshwater Atlas Collection — fwa_collection","text":"","code":"collection_id <- \"whse_basemapping.fwa_approx_borders\" filter <- list(border = \"USA_49\") fwa_query_collection(collection_id, filter = filter) #> Simple feature collection with 1 feature and 2 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: -123.3 ymin: 49.00024 xmax: -114.06 ymax: 49.00025 #> Geodetic CRS:  WGS 84 #> # A data frame: 1 × 3 #>   approx_border_id border                                               geometry #> *            <dbl> <chr>                                        <LINESTRING [°]> #> 1               10 USA_49 (-123.3 49.00025, -123.29 49.00025, -123.28 49.00025,…  collection_id <- \"whse_basemapping.fwa_stream_networks_sp\" filter <- list(gnis_name = \"Sangan River\") fwa_query_collection(collection_id, filter = filter) #> Simple feature collection with 21 features and 26 fields #> Geometry type: LINESTRING #> Dimension:     XYZ #> Bounding box:  xmin: -131.9972 ymin: 53.94994 xmax: -131.9168 ymax: 54.0332 #> z_range:       zmin: 1 zmax: 67 #> Geodetic CRS:  WGS 84 #> # A data frame: 21 × 27 #>    blue_line_key blue_line_key_50k downstream_route_mea…¹ edge_type feature_code #>  *         <int>             <int>                  <dbl>     <dbl> <chr>        #>  1     360879896               130                 16588.      1000 GA24850140   #>  2     360879896                11                  1266.      1000 GA24850000   #>  3     360879896               130                 17516.      1050 GA24850140   #>  4     360879896                11                 13068.      1000 GA24850000   #>  5     360879896                11                  6808.      1000 GA24850000   #>  6     360879896                11                  7384.      1000 GA24850000   #>  7     360879896                11                 13911.      1000 GA24850000   #>  8     360879896                11                 13776.      1000 GA24850000   #>  9     360879896                11                 12161.      1000 GA24850000   #> 10     360879896                11                  4721.      1000 GA24850000   #> # ℹ 11 more rows #> # ℹ abbreviated name: ¹​downstream_route_measure #> # ℹ 22 more variables: feature_source <chr>, fwa_watershed_code <chr>, #> #   gnis_id <int>, gnis_name <chr>, gradient <dbl>, left_right_tributary <chr>, #> #   length_metre <dbl>, linear_feature_id <int>, local_watershed_code <chr>, #> #   localcode_ltree <chr>, stream_magnitude <dbl>, stream_order <dbl>, #> #   upstream_route_measure <dbl>, waterbody_key <chr>, …"},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_watershed_at_measure.html","id":null,"dir":"Reference","previous_headings":"","what":"Freshwater Atlas Watershed at Downstream Route Measure — fwa_watershed_at_measure","title":"Freshwater Atlas Watershed at Downstream Route Measure — fwa_watershed_at_measure","text":"Gets polygon watershed specified river metre.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_watershed_at_measure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Freshwater Atlas Watershed at Downstream Route Measure — fwa_watershed_at_measure","text":"","code":"fwa_watershed_at_measure(   blue_line_key,   downstream_route_measure = 0,   bbox = NULL,   properties = NULL,   transform = NULL,   epsg = 4326,   nocache = getOption(\"fwa.nocache\", FALSE) )"},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_watershed_at_measure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Freshwater Atlas Watershed at Downstream Route Measure — fwa_watershed_at_measure","text":"blue_line_key positive whole number stream blue line key. downstream_route_measure positive number river metre. bbox vector four numbers indicating bounding box limit output features , e.g. c(minLon, minLat, maxLon, maxLat). properties vector strings column names include. NULL (default), columns retained. transform character vector name valid transform function followed parameter values (e.g. c(\"ST_Simplify\", 100)) epsg positive whole number epsg transform features . nocache flag specifying whether cache results.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_watershed_at_measure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Freshwater Atlas Watershed at Downstream Route Measure — fwa_watershed_at_measure","text":"sf object.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_watershed_at_measure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Freshwater Atlas Watershed at Downstream Route Measure — fwa_watershed_at_measure","text":"function selects aggregate fundamental watershed polygons upstream fundamental watershed point lies. Depending point fundamental watershed one four things can happen fundamental watershed. point < 50 m upstream bottom fundamental watershed fundamental watershed included aggregation (recorded KEEP refine_method property). Else point < 100m downstream top fundamental watershed fundamental watershed included aggregation (recorded DROP refine_method property). Else point polygonal river/canal fundamental watershed cut across banks river included aggregation (recorded CUT refine_method property). Otherwise something else happens (recorded DEM refine_method property).","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_watershed_at_measure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Freshwater Atlas Watershed at Downstream Route Measure — fwa_watershed_at_measure","text":"","code":"fwa_watershed_at_measure(356308001, downstream_route_measure = 10000) #> Simple feature collection with 1 feature and 4 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -121.9625 ymin: 49.09301 xmax: -121.8528 ymax: 49.14291 #> Geodetic CRS:  WGS 84 #> # A data frame: 1 × 5 #>   area_ha localcode_ltree   refine_method wscode_ltree                  geometry #> *   <dbl> <chr>             <chr>         <chr>                    <POLYGON [°]> #> 1   2364. 100.070889.490268 DEM           100.070889   ((-121.9625 49.10385, -1…"},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_watershed_hex.html","id":null,"dir":"Reference","previous_headings":"","what":"Freshwater Atlas Watershed Hex — fwa_watershed_hex","title":"Freshwater Atlas Watershed Hex — fwa_watershed_hex","text":"Gets 25m hexagon grid covering fundamental watershed river metre lies.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_watershed_hex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Freshwater Atlas Watershed Hex — fwa_watershed_hex","text":"","code":"fwa_watershed_hex(   blue_line_key,   downstream_route_measure = 0,   limit = 10000,   bbox = NULL,   properties = NULL,   transform = NULL,   epsg = 4326,   nocache = getOption(\"fwa.nocache\", FALSE) )"},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_watershed_hex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Freshwater Atlas Watershed Hex — fwa_watershed_hex","text":"blue_line_key positive whole number stream blue line key. downstream_route_measure positive number river metre. limit positive whole number indicating maximum number features return. bbox vector four numbers indicating bounding box limit output features , e.g. c(minLon, minLat, maxLon, maxLat). properties vector strings column names include. NULL (default), columns retained. transform character vector name valid transform function followed parameter values (e.g. c(\"ST_Simplify\", 100)) epsg positive whole number epsg transform features . nocache flag specifying whether cache results.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_watershed_hex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Freshwater Atlas Watershed Hex — fwa_watershed_hex","text":"sf object.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_watershed_hex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Freshwater Atlas Watershed Hex — fwa_watershed_hex","text":"","code":"if (FALSE) { # \\dontrun{ fwa_watershed_hex(356308001, downstream_route_measure = 10000) } # }"},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_watershed_stream.html","id":null,"dir":"Reference","previous_headings":"","what":"Freshwater Atlas Watershed Stream — fwa_watershed_stream","title":"Freshwater Atlas Watershed Stream — fwa_watershed_stream","text":"Gets upstream stream segment within fundamental watershed.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_watershed_stream.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Freshwater Atlas Watershed Stream — fwa_watershed_stream","text":"","code":"fwa_watershed_stream(   blue_line_key,   downstream_route_measure = 0,   bbox = NULL,   properties = NULL,   transform = NULL,   epsg = 4326,   nocache = getOption(\"fwa.nocache\", FALSE) )"},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_watershed_stream.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Freshwater Atlas Watershed Stream — fwa_watershed_stream","text":"blue_line_key positive whole number stream blue line key. downstream_route_measure positive number river metre. bbox vector four numbers indicating bounding box limit output features , e.g. c(minLon, minLat, maxLon, maxLat). properties vector strings column names include. NULL (default), columns retained. transform character vector name valid transform function followed parameter values (e.g. c(\"ST_Simplify\", 100)) epsg positive whole number epsg transform features . nocache flag specifying whether cache results.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_watershed_stream.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Freshwater Atlas Watershed Stream — fwa_watershed_stream","text":"sf object.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_watershed_stream.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Freshwater Atlas Watershed Stream — fwa_watershed_stream","text":"useful adding stream network included watershed measure.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwa_watershed_stream.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Freshwater Atlas Watershed Stream — fwa_watershed_stream","text":"","code":"fwa_watershed_stream(356308001, downstream_route_measure = 10000) #> Simple feature collection with 1 feature and 1 field #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: -121.9504 ymin: 49.1401 xmax: -121.9413 ymax: 49.15144 #> Geodetic CRS:  WGS 84 #> # A data frame: 1 × 2 #>   linear_feature_id                                                     geometry #> *             <int>                                        <MULTILINESTRING [°]> #> 1         700730811 ((-121.9504 49.15144, -121.9501 49.15144, -121.9498 49.1513…"},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwapgr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"fwapgr: Client for BC Freshwater Atlas fwapg API — fwapgr-package","title":"fwapgr: Client for BC Freshwater Atlas fwapg API — fwapgr-package","text":"Client fwapg, PostgreSQL database web API BC Freshwater Atlas data.  Client fwapg, PostgreSQL database web API BC Freshwater Atlas data.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/fwapgr/reference/fwapgr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"fwapgr: Client for BC Freshwater Atlas fwapg API — fwapgr-package","text":"Maintainer: Sebastian Dalgarno seb@poissonconsulting.ca (ORCID) Authors: Joe Thorley joe@poissonconsulting.ca (ORCID) contributors: Poisson Consulting [copyright holder, funder] Nadine Hussein nadine@poissonconsulting.ca (ORCID) [contributor]","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/hydroshed.html","id":null,"dir":"Reference","previous_headings":"","what":"Hydroshed — hydroshed","title":"Hydroshed — hydroshed","text":"Gets aggregated boundary hydroshed polygons upstream provided location.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/hydroshed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hydroshed — hydroshed","text":"","code":"hydroshed(   x,   y,   srid = 4326,   bbox = NULL,   properties = NULL,   transform = NULL,   epsg = 4326,   nocache = getOption(\"fwa.nocache\", FALSE) )"},{"path":"https://poissonconsulting.github.io/fwapgr/reference/hydroshed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hydroshed — hydroshed","text":"x number x coordinate. y number y coordinate. srid positive whole number epsg coordinates. bbox vector four numbers indicating bounding box limit output features , e.g. c(minLon, minLat, maxLon, maxLat). properties vector strings column names include. NULL (default), columns retained. transform character vector name valid transform function followed parameter values (e.g. c(\"ST_Simplify\", 100)) epsg positive whole number epsg transform features . nocache flag specifying whether cache results.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/hydroshed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hydroshed — hydroshed","text":"sf object.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/fwapgr/reference/hydroshed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hydroshed — hydroshed","text":"","code":"hydroshed(x = -132.26, y = 53.36) #> Simple feature collection with 1 feature and 0 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -132.384 ymin: 53.25479 xmax: -132.1535 ymax: 53.38813 #> Geodetic CRS:  WGS 84 #> # A data frame: 1 × 1 #>                                                                         geometry #> *                                                                  <POLYGON [°]> #> 1 ((-132.275 53.38333, -132.2601 53.38369, -132.2566 53.38715, -132.2542 53.387…"},{"path":"https://poissonconsulting.github.io/fwapgr/reference/internal.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Descriptions — internal","title":"Parameter Descriptions — internal","text":"Descriptions parameters typical return value provided functions.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/internal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Descriptions — internal","text":"bbox vector four numbers indicating bounding box limit output features , e.g. c(minLon, minLat, maxLon, maxLat). blue_line_key positive whole number stream blue line key. collection_id character string collection id. downstream_route_measure positive number river metre. end_measure integer distance meters upstream river mouth end . epsg positive whole number epsg transform features . function_id character string function id. filter named vector list filter(s) apply, list names correspond column names list values correspond desired value, e.g. list(gnis_name = \"Sangan River\"). interval_length integer interval distance meters. limit positive whole number indicating maximum number features return. offset positive whole number indicating offset start returned results. parameters named list parameters values specific function. properties vector strings column names include. NULL (default), columns retained. sortby string sorts response items property. Default ascending property name can prepended '-' indicate descending. groupby string property name (.e., column name) group response features . typically used aggregate transform function. srid positive whole number epsg coordinates. start_measure integer distance meters upstream river mouth start . tolerance number tolerance m. transform character vector name valid transform function followed parameter values (e.g. c(\"ST_Simplify\", 100)) x number x coordinate. y number y coordinate. nocache flag specifying whether cache results.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/reference/internal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter Descriptions — internal","text":"sf object.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/news/index.html","id":"fwapgr-0109015","dir":"Changelog","previous_headings":"","what":"fwapgr 0.1.0.9015","title":"fwapgr 0.1.0.9015","text":"Update new database","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/news/index.html","id":"fwapgr-0109014","dir":"Changelog","previous_headings":"","what":"fwapgr 0.1.0.9014","title":"fwapgr 0.1.0.9014","text":"downstream_route_measure locate_along_interval() now returned integer together index. Indices including blue_line_key, gnis_id linear_feature_id now returned integers.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/news/index.html","id":"fwapgr-0109013","dir":"Changelog","previous_headings":"","what":"fwapgr 0.1.0.9013","title":"fwapgr 0.1.0.9013","text":"Added nocache = getOption(\"fwa.nocache\", FALSE) argument functions.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/news/index.html","id":"fwapgr-0109012","dir":"Changelog","previous_headings":"","what":"fwapgr 0.1.0.9012","title":"fwapgr 0.1.0.9012","text":"collection dropped id column. bc_ind TRUE FALSE index-point Grostete Creek two others. collection properties dropped upstream_area_ha.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/news/index.html","id":"fwapgr-0109011","dir":"Changelog","previous_headings":"","what":"fwapgr 0.1.0.9011","title":"fwapgr 0.1.0.9011","text":"Change endpoint.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/news/index.html","id":"fwapgr-0109010","dir":"Changelog","previous_headings":"","what":"fwapgr 0.1.0.9010","title":"fwapgr 0.1.0.9010","text":"fwapg removed non-FWA WHSE_BASEMAPPING collections.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/news/index.html","id":"fwapgr-0109009","dir":"Changelog","previous_headings":"","what":"fwapgr 0.1.0.9009","title":"fwapgr 0.1.0.9009","text":"Renamed fwa_hydroshed() hydroshed().","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/news/index.html","id":"fwapgr-0109008","dir":"Changelog","previous_headings":"","what":"fwapgr 0.1.0.9008","title":"fwapgr 0.1.0.9008","text":"Remove limit argument fwa_locate_along_interval() specified start_measure, end_measure interval_length.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/news/index.html","id":"fwapgr-0109007","dir":"Changelog","previous_headings":"","what":"fwapgr 0.1.0.9007","title":"fwapgr 0.1.0.9007","text":"Removed offset argument unreliable.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/news/index.html","id":"fwapgr-0109006","dir":"Changelog","previous_headings":"","what":"fwapgr 0.1.0.9006","title":"fwapgr 0.1.0.9006","text":"Renamed fwa_collections_properties() fwa_collection_properties().","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/news/index.html","id":"fwapgr-0109005","dir":"Changelog","previous_headings":"","what":"fwapgr 0.1.0.9005","title":"fwapgr 0.1.0.9005","text":"Soft-deprecated fwa_collection() fwa_query_collection(). Soft-deprecated fwa_meta_properties() fwa_collections_properties(). Soft-deprecate fwa_meta_collections() fwa_collections(). Dropped fwa_valid_transform(). Rolled back R <= 3.6.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/news/index.html","id":"fwapgr-0109004","dir":"Changelog","previous_headings":"","what":"fwapgr 0.1.0.9004","title":"fwapgr 0.1.0.9004","text":"Added fwa_hydroshed() exported fwa_valid_transforms().","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/news/index.html","id":"fwapgr-0109003","dir":"Changelog","previous_headings":"","what":"fwapgr 0.1.0.9003","title":"fwapgr 0.1.0.9003","text":"Now requires R 4.0.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/news/index.html","id":"fwapgr-0109002","dir":"Changelog","previous_headings":"","what":"fwapgr 0.1.0.9002","title":"fwapgr 0.1.0.9002","text":"Internal changes .","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/news/index.html","id":"fwapgr-0109001","dir":"Changelog","previous_headings":"","what":"fwapgr 0.1.0.9001","title":"fwapgr 0.1.0.9001","text":"Add end_measure = NULL argument fwa_locate_along_interval() rename start start_measure. replace fwa_stream_at_measure fwa_watershed_stream consistent API function names add transform argument fwa_collection rename column argument properties add limit, offset, bbox, properties, transform arguments API function wrappers replaced fwa_list_tables fwa_meta_collections longer separates table schema collection_id replace fwa_list_columns fwa_meta_properties accepts collection_id table schema fwa_nearest_stream removed API. Replaced fwa_index_point. Moved wrapper functionality freshwateratlasbc. fwa_search_gnis_streams() fwa_list_gnis_streams() now take gnis_name = “.*” instead NULL default argument test back R 3.6","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/news/index.html","id":"fwapgr-0109000","dir":"Changelog","previous_headings":"","what":"fwapgr 0.1.0.9000","title":"fwapgr 0.1.0.9000","text":"Allow fwa_collection() accept ‘whse_fish’ schema.","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/news/index.html","id":"fwapgr-010","dir":"Changelog","previous_headings":"","what":"fwapgr 0.1.0","title":"fwapgr 0.1.0","text":"Added several new functions access new API ‘hillcrestgeo.ca/fwapg’ (fwa_collection, fwa_stream_gnis, fwa_watershed_at_measure, fwa_stream_at_measure, fwa_watershed_hex, fwa_nearest_stream). Defunct several functions using old API ‘hillcrestgeo.ca/fwa/v1’ (fwa_feature, fwa_watershed, fwa_gnis_streams).","code":""},{"path":"https://poissonconsulting.github.io/fwapgr/news/index.html","id":"fwapgr-001","dir":"Changelog","previous_headings":"","what":"fwapgr 0.0.1","title":"fwapgr 0.0.1","text":"Initial release.","code":""}]
